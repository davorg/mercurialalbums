#!/usr/bin/env perl
use strict;
use warnings;
use utf8;
use feature 'say';

use FindBin qw($Bin);
use lib "$Bin/../lib";

use Getopt::Long qw(GetOptions);
use File::Path qw(make_path);
use File::Spec;
use Template;
use Mercurial::Schema;
use Mercurial::Page;

binmode STDOUT, ':encoding(UTF-8)';
binmode STDERR, ':encoding(UTF-8)';

my ($db, $out) = ('db/mercurial.db', 'docs');
GetOptions(
  'db=s'  => \$db,
  'out=s' => \$out,
) or die "Usage: $0 --db DB --out DIR\n";

my $schema = Mercurial::Schema->get_schema($db);

my %site = (
  title      => 'Mercurial Albums',
  base_url   => '/',
  nav => [
    { href => '/',        label => 'Home' },
    { href => '/year/',   label => 'Years' },
    { href => '/artist/', label => 'Artists' },
    { href => '/album/',  label => 'Albums' },
  ],
);

my $tt = Template->new({
  INCLUDE_PATH => "$Bin/../tt_lib",
  PRE_PROCESS  => [ 'utils.tt' ],
  ENCODING     => 'utf8',
  WRAPPER      => 'layout.tt',
  VARIABLES    => \%site,
}) or die Template->error;

sub write_page {
  my (%args) = @_;
  my $path = File::Spec->catfile($out, @{$args{path}});
  my (undef,$dir,undef) = File::Spec->splitpath($path);
  make_path($dir) unless -d $dir;
  open my $fh, '>:encoding(UTF-8)', $path or die "write $path: $!";
  $tt->process($args{template}, $args{vars}, $fh) or die $tt->error;
  close $fh;
# say "Wrote $path";
}

my %pages = (
  index => {
    path => '',
    title    => 'Mercurial Albums',
    description => 'The history of the Mercury Prize',
  },
  years => {
    path => 'year/',
    title    => 'Years',
    description => 'The years of the Mercury Prize',
  },
  artists => {
    path => 'artist/',
    title    => 'Artists',
    description => 'Every artist that has been nominated for a Mercury Prize',
  },
  albums => {
    path => 'album/',
    title    => 'Albums',
    description => 'Every album that has been nominated for a Mercury Prize',
  },
);

# Home
my $page = Mercurial::Page->new($pages{index});
write_page(
  template => 'home.tt',
  vars     => { page => $page },
  path     => ['index.html'],
);

# Years
$page = Mercurial::Page->new($pages{years});
my @years = $schema->resultset('Year')->search({}, { order_by => { -desc => 'year' } })->all;
write_page(
  template => 'years_index.tt',
  vars     => { page => $page, years => \@years },
  path     => ['year','index.html'],
);
for my $yr (@years) {
  write_page(
    template => 'year.tt',
    vars     => { year => $yr },
    path     => ['year', $yr->slug, 'index.html'],
  );
}

# Artists
$page = Mercurial::Page->new($pages{artists});
my @artists = $schema->resultset('Artist')->sorted_artists->all;
write_page(
  template => 'artists_index.tt',
  vars     => { page => $page, artists => \@artists },
  path     => ['artist','index.html'],
);
for my $ar (@artists) {
  write_page(
    template => 'artist.tt',
    vars     => { artist => $ar },
    path     => ['artist', $ar->slug, 'index.html'],
  );
}

# Albums
$page = Mercurial::Page->new($pages{albums});
my @albums = $schema->resultset('Album')->by_title;
write_page(
  template => 'albums_index.tt',
  vars     => { page => $page, albums => \@albums },
  path     => ['album','index.html'],
);

for my $al (@albums) {
  write_page(
    template => 'album.tt',
    vars     => {
      album => $al,
    },
    path     => ['album', $al->slug, 'index.html'],
  );
}

say "Output in '$out/'";
